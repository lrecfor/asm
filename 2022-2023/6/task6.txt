Задания.


На языке ассемблера реализовать функции и программы для их проверки.
Шаблоны для некоторых заданий в каталоге task.

+1. Функция разбивает строку на подстроки по подстроке.
Возвращает указатель на массив указателей на получившиеся подстроки.
Память под массив должна выделяться в куче (malloc).
char ** split (const char *str, char *substr);
split ("sdfad11asdfka1222221safa1", "1") ->
0 -> "sdfad"
1 -> ""
2 -> "asdfka"
3 -> "22222"
4 -> "safa"
5 -> ""
6 = NULL


+2. Объединяет строки из массива str_array в одну,
вставляя между ними строку str. 
Возвращает получившуюся строку.
char * join (char **str_array, char *str) 


+-3. Инвертирование массива чисел.
После вызова функции в исходном массиве должны быть те же
самые числа, но расположенные в обратном порядке (первый станет последним 
и т.д.).
Для тестирования реализовать функцию генерации массива случайных чисел.
В качестве аргумента командной строки принимать количество чисел.
Реализовать функцию swap (void *p1, void *p2, size_t size), с помощью 
которой осуществлять перестановку элементов массива.


+4. Сложение элементов массива.
Функция принимает три массива: в каждый элемент первого массива
сохраняется сумма соответствующих элементов второго и третьего массивов.


+5. Поиск элементов массива, удовлетворяющих некоторому условию. Функция 
принимает два массива и указатель на функцию, принимающую в качестве 
аргумента элемент массива. В первом массиве сохраняются элементы второго 
массива, удовлетворяющие условию (т.е. для которых переданная функция 
вернула true). Функция возвращает количество элементов
в первом массиве, т.е. количество элементов второго массива, 
удовлетворяющих условию.

bool Cmp3 (int a) {
    return a < 3;
}
unsigned int ProcessingBuf (int *dst, int *src, filterFun)
int buf[7];

ProcessingBuf (buf, {1, 5, 2, 10, 1, 0, 6}, Cmp3); -> buf = {1, 2, 1, 0}



Любое одно задание - 1 балл.
Любые три задания - 2 балла.
Все задания - 3 балла.


+6. Реализовать функцию слияния двух отсортированных массивов указателей 
на строки в новый отсортированный массив. Реализовать генерацию случайных 
массивов указателей на строки. Воспользоваться функцией сортировки массива 
указателей на строки из предыдущего задания.

1 балл.

% 7 I O S ) 0 8 : O

% ) : 0 7 8 I O O S

ArrayCat proc c first:dword, second:dword
	local i:dword 
	local count:dword
	local size_:dword
	local res:dword
	local offset_:dword

	mov [size_], 100	;;

	invoke malloc, [size_]
	test eax, eax
	jz ArrayCat_ret
	mov [res], eax

	;invoke ArrayCpy, [res], [first], 10	;;
	
	;mov eax, 10	;;
	;mov ecx, 4
	;mul ecx
	;mov [offset_], eax
	mov [count], 10	;;
	mov [i], 0

	ArrayCat_cyc:
		mov ebx, [res]
		mov ecx, [second]
		mov eax, [i]
		mov edx, dword ptr[ecx+eax]
		mov eax, [offset_]
		mov dword ptr[ebx+eax], edx
	
		cmp [count], 0
		je ArrayCat_ret
	
		add [i], 4
		add [offset_], 4
		dec count
		jmp ArrayCat_cyc

	ArrayCat_ret:
	;invoke SortStrings, [res], 20	;;
	mov eax, [res]
    ret
ArrayCat endp